FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies for development
RUN apt-get update && apt-get install -y \
    gcc \
    git \
    curl \
    vim \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip in virtual environment
RUN pip install --upgrade pip

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies in virtual environment with verbose output
RUN pip install --no-cache-dir -r requirements.txt --verbose

# Verify openai-agents installation
RUN python -c "import agents; print('âœ… agents module imported successfully'); print('Available:', dir(agents)[:5])"

# Install development dependencies
RUN pip install --no-cache-dir \
    debugpy==1.8.0 \
    pytest==7.4.3 \
    pytest-asyncio==0.21.1 \
    black==23.11.0 \
    flake8==6.1.0 \
    mypy==1.7.1

# Copy application code
COPY . .

# Create directory for SQLite database
RUN mkdir -p /app/data

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV DEBUG=True
ENV PYTHONDONTWRITEBYTECODE=1

# Expose ports (8000 for app, 5678 for debugger)
EXPOSE 8000 5678

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8000/health')" || exit 1

# Default command for development - use the debug startup script directly
CMD ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "start-debug.py"] 